package rsa;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.uiDesigner.core.Spacer;

import javax.swing.*;
import java.awt.*;
import java.security.NoSuchAlgorithmException;

public class PrivateKeyContentsDialog extends JDialog {
  private JPanel contentPane;
  private JButton buttonOK;
  private JTextArea modulusTextArea;
  private JTextArea publicExponentTextArea;
  private JTextArea privateExponentTextArea;
  private JTextArea prime1TextArea;
  private JTextArea prime2TextArea;
  private JTextArea exponent1TextArea;
  private JTextArea exponent2TextArea;
  private JTextArea coefficientTextArea;
  private JLabel keyLengthLabel;
  private JLabel messageLimitLabel;

  public PrivateKeyContentsDialog(Component parentPane, RSAPrivateKey privateKey, String hashAlgorithm) throws NoSuchAlgorithmException {
    setContentPane(contentPane);
    setModal(true);
    setTitle("Private key contents");
    getRootPane().setDefaultButton(buttonOK);
    keyLengthLabel.setText(String.format("Key length: %d bits", privateKey.getModulusByteCount() * 8));
    messageLimitLabel.setText(String.format("Message limit: %d bytes", Message.getLengthLimit(hashAlgorithm, privateKey.getModulusByteCount())));
    modulusTextArea.setText(privateKey.getModulusText());
    publicExponentTextArea.setText(privateKey.getPublicExponentText());
    privateExponentTextArea.setText(privateKey.getPrivateExponentText());
    prime1TextArea.setText(privateKey.getPrime1Text());
    prime2TextArea.setText(privateKey.getPrime2Text());
    exponent1TextArea.setText(privateKey.getExponent1Text());
    exponent2TextArea.setText(privateKey.getExponent2Text());
    coefficientTextArea.setText(privateKey.getCoefficientText());
    setLocationRelativeTo(parentPane);

    buttonOK.addActionListener(e -> {
      setVisible(false);
      dispose();
    });
  }

  public void showDialog() {
    pack();
    setModal(true);
    setVisible(true);
  }

  {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
    $$$setupUI$$$();
  }

  /**
   * Method generated by IntelliJ IDEA GUI Designer
   * >>> IMPORTANT!! <<<
   * DO NOT edit this method OR call it in your code!
   *
   * @noinspection ALL
   */
  private void $$$setupUI$$$() {
    contentPane = new JPanel();
    contentPane.setLayout(new GridLayoutManager(2, 1, new Insets(10, 10, 10, 10), -1, -1));
    final JPanel panel1 = new JPanel();
    panel1.setLayout(new GridLayoutManager(1, 3, new Insets(0, 0, 0, 0), -1, -1));
    contentPane.add(panel1, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, 1, null, null, null, 0, false));
    buttonOK = new JButton();
    buttonOK.setText("OK");
    panel1.add(buttonOK, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    final Spacer spacer1 = new Spacer();
    panel1.add(spacer1, new GridConstraints(0, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
    final Spacer spacer2 = new Spacer();
    panel1.add(spacer2, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
    final JPanel panel2 = new JPanel();
    panel2.setLayout(new GridLayoutManager(11, 2, new Insets(0, 0, 0, 0), -1, -1));
    contentPane.add(panel2, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
    final JLabel label1 = new JLabel();
    label1.setText("Modulus:");
    panel2.add(label1, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    final JLabel label2 = new JLabel();
    label2.setText("Public exponent:");
    panel2.add(label2, new GridConstraints(3, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    final JScrollPane scrollPane1 = new JScrollPane();
    panel2.add(scrollPane1, new GridConstraints(2, 0, 1, 2, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, null, new Dimension(250, 100), null, 0, false));
    modulusTextArea = new JTextArea();
    modulusTextArea.setEditable(false);
    modulusTextArea.setLineWrap(true);
    scrollPane1.setViewportView(modulusTextArea);
    final JScrollPane scrollPane2 = new JScrollPane();
    panel2.add(scrollPane2, new GridConstraints(4, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, null, new Dimension(250, 100), null, 0, false));
    publicExponentTextArea = new JTextArea();
    publicExponentTextArea.setEditable(false);
    publicExponentTextArea.setLineWrap(true);
    scrollPane2.setViewportView(publicExponentTextArea);
    final JLabel label3 = new JLabel();
    label3.setText("First prime:");
    panel2.add(label3, new GridConstraints(5, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    final JLabel label4 = new JLabel();
    label4.setText("First CRT exponent:");
    panel2.add(label4, new GridConstraints(7, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    final JScrollPane scrollPane3 = new JScrollPane();
    panel2.add(scrollPane3, new GridConstraints(6, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, null, new Dimension(250, 100), null, 0, false));
    prime1TextArea = new JTextArea();
    prime1TextArea.setEditable(false);
    prime1TextArea.setLineWrap(true);
    scrollPane3.setViewportView(prime1TextArea);
    final JScrollPane scrollPane4 = new JScrollPane();
    panel2.add(scrollPane4, new GridConstraints(8, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, null, new Dimension(250, 100), null, 0, false));
    exponent1TextArea = new JTextArea();
    exponent1TextArea.setEditable(false);
    exponent1TextArea.setLineWrap(true);
    scrollPane4.setViewportView(exponent1TextArea);
    final JScrollPane scrollPane5 = new JScrollPane();
    panel2.add(scrollPane5, new GridConstraints(10, 0, 1, 2, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, null, new Dimension(250, 100), null, 0, false));
    coefficientTextArea = new JTextArea();
    coefficientTextArea.setEditable(false);
    coefficientTextArea.setLineWrap(true);
    scrollPane5.setViewportView(coefficientTextArea);
    final JLabel label5 = new JLabel();
    label5.setText("CRT coefficient:");
    panel2.add(label5, new GridConstraints(9, 0, 1, 2, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    final JLabel label6 = new JLabel();
    label6.setText("Private exponent:");
    panel2.add(label6, new GridConstraints(3, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    final JScrollPane scrollPane6 = new JScrollPane();
    panel2.add(scrollPane6, new GridConstraints(8, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, null, new Dimension(250, 100), null, 0, false));
    exponent2TextArea = new JTextArea();
    exponent2TextArea.setEditable(false);
    exponent2TextArea.setLineWrap(true);
    scrollPane6.setViewportView(exponent2TextArea);
    final JLabel label7 = new JLabel();
    label7.setText("Second CRT exponent:");
    panel2.add(label7, new GridConstraints(7, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    final JScrollPane scrollPane7 = new JScrollPane();
    panel2.add(scrollPane7, new GridConstraints(4, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, null, new Dimension(250, 100), null, 0, false));
    privateExponentTextArea = new JTextArea();
    privateExponentTextArea.setEditable(false);
    privateExponentTextArea.setLineWrap(true);
    scrollPane7.setViewportView(privateExponentTextArea);
    final JScrollPane scrollPane8 = new JScrollPane();
    panel2.add(scrollPane8, new GridConstraints(6, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, null, new Dimension(250, 100), null, 0, false));
    prime2TextArea = new JTextArea();
    prime2TextArea.setEditable(false);
    prime2TextArea.setLineWrap(true);
    scrollPane8.setViewportView(prime2TextArea);
    final JLabel label8 = new JLabel();
    label8.setText("Second prime:");
    panel2.add(label8, new GridConstraints(5, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    keyLengthLabel = new JLabel();
    keyLengthLabel.setText("Key length: bytes");
    panel2.add(keyLengthLabel, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    messageLimitLabel = new JLabel();
    messageLimitLabel.setText("Message limit: bytes");
    panel2.add(messageLimitLabel, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
  }

  /**
   * @noinspection ALL
   */
  public JComponent $$$getRootComponent$$$() {
    return contentPane;
  }
}
